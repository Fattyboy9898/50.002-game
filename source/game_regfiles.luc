module game_regfiles (
    input clk,  // clock
    input rst,  // reset
    input we,
    input read_address_a[4], //address port a
    input read_address_b[4], //address port b
    input read_address_o[4], //address port o
    input write_address[4],
    input data[16],
    output out_a[16], // port a output
    output out_b[16], // port b output
    output out_o[6] // port o output
  ) {
  
  .clk(clk){
    .rst(rst){
      dff operand1[7];
      dff operand2[7];
      dff operation_level[2];
      dff expectedAns[13];
      dff moduloAns[4];
      dff score[7];
      dff countdown_timer[6];
      dff direction[1];
      dff ledvalue[10];
      dff score_timer[3];
      dff temp1[7];
      dff temp2[7];
      dff temp3[7];
      dff temp4[7];
      dff temp5[7];
      dff temp6[7];
      
    }
  }

  always {
    //if write enabled look at write address
    if (we) {
      case(write_address){
        h0 : operand1.d = data;
        h1 : operand2.d = data;
        h2 : operation_level.d = data;
        h3 : expectedAns.d = data;
        h4 : moduloAns.d = data;
        h5 : score.d = data;
        h6 : countdown_timer.d = data;
        h7 : direction.d = data;
        h8 : ledvalue.d = data;
        h9 : score_timer.d = data;
        ha : temp1.d = data;
        hb : temp2.d = data;
        hc : temp3.d = data; 
        hd : temp4.d = data;
        he : temp5.d = data;
        hf : temp6.d = data;
        
      }
    }
    
    //read port a 
    case(read_address_a) {
    
        h0 : out_a=operand1.q;
        h1 : out_a=operand2.q;
        h2 : out_a=operation_level.q;
        h3 : out_a=expectedAns.q;
        h4 : out_a=moduloAns.q;
        h5 : out_a=score.q;
        h6 : out_a=countdown_timer.q;
        h7 : out_a=direction.q;
        h8 : out_a=ledvalue.q;
        h9 : out_a=score_timer.q;
        ha : out_a=temp1.q;
        hb : out_a=temp2.q;
        hc : out_a=temp3.q; 
        hd : out_a=temp4.q;
        he : out_a=temp5.q;
        hf : out_a=temp6.q;
        default : out_a = 0;
    }
    
    //
    case(read_address_b){
        h0 : out_b=operand1.q;
        h1 : out_b=operand2.q;
        h2 : out_b=operation_level.q;
        h3 : out_b=expectedAns.q;
        h4 : out_b=moduloAns.q;
        h5 : out_b=score.q;
        h6 : out_b=countdown_timer.q;
        h7 : out_b=direction.q;
        h8 : out_b=ledvalue.q;
        h9 : out_b=score_timer.q;
        ha : out_b=temp1.q;
        hb : out_b=temp2.q;
        hc : out_b=temp3.q; 
        hd : out_b=temp4.q;
        he : out_b=temp5.q;
        hf : out_b=temp6.q;
        default : out_b = 0;
    }
    
    //read port o
    case(read_address_o){
        h0 : out_o=operand1.q;
        h1 : out_o=operand2.q;
        h2 : out_o=operation_level.q;
        h3 : out_o=expectedAns.q;
        h4 : out_o=moduloAns.q;
        h5 : out_o=score.q;
        h6 : out_o=countdown_timer.q;
        h7 : out_o=direction.q;
        h8 : out_o=ledvalue.q;
        h9 : out_o=score_timer.q;
        ha : out_o=temp1.q;
        hb : out_o=temp2.q;
        hc : out_o=temp3.q; 
        hd : out_o=temp4.q;
        he : out_o=temp5.q;
        hf : out_o=temp6.q;
        default : out_o = 0;
      
    }
    
    
    
    
  }
  
  
}
