/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_regfiles_9 (
    input clk,
    input rst,
    input we,
    input [3:0] read_address_a,
    input [3:0] read_address_b,
    input [3:0] read_address_o,
    input [3:0] write_address,
    input [15:0] data,
    output reg [15:0] out_a,
    output reg [15:0] out_b,
    output reg [5:0] out_o
  );
  
  
  
  reg [6:0] M_operand1_d, M_operand1_q = 1'h0;
  reg [6:0] M_operand2_d, M_operand2_q = 1'h0;
  reg [1:0] M_operation_level_d, M_operation_level_q = 1'h0;
  reg [12:0] M_expectedAns_d, M_expectedAns_q = 1'h0;
  reg [3:0] M_moduloAns_d, M_moduloAns_q = 1'h0;
  reg [6:0] M_score_d, M_score_q = 1'h0;
  reg [5:0] M_countdown_timer_d, M_countdown_timer_q = 1'h0;
  reg [0:0] M_direction_d, M_direction_q = 1'h0;
  reg [9:0] M_ledvalue_d, M_ledvalue_q = 1'h0;
  reg [2:0] M_score_timer_d, M_score_timer_q = 1'h0;
  reg [6:0] M_temp1_d, M_temp1_q = 1'h0;
  reg [6:0] M_temp2_d, M_temp2_q = 1'h0;
  reg [6:0] M_temp3_d, M_temp3_q = 1'h0;
  reg [6:0] M_temp4_d, M_temp4_q = 1'h0;
  reg [6:0] M_temp5_d, M_temp5_q = 1'h0;
  reg [6:0] M_temp6_d, M_temp6_q = 1'h0;
  
  always @* begin
    M_operand1_d = M_operand1_q;
    M_score_timer_d = M_score_timer_q;
    M_operand2_d = M_operand2_q;
    M_ledvalue_d = M_ledvalue_q;
    M_expectedAns_d = M_expectedAns_q;
    M_operation_level_d = M_operation_level_q;
    M_temp2_d = M_temp2_q;
    M_temp3_d = M_temp3_q;
    M_temp1_d = M_temp1_q;
    M_temp6_d = M_temp6_q;
    M_moduloAns_d = M_moduloAns_q;
    M_score_d = M_score_q;
    M_temp4_d = M_temp4_q;
    M_temp5_d = M_temp5_q;
    M_countdown_timer_d = M_countdown_timer_q;
    M_direction_d = M_direction_q;
    
    if (we) begin
      
      case (write_address)
        4'h0: begin
          M_operand1_d = data;
        end
        4'h1: begin
          M_operand2_d = data;
        end
        4'h2: begin
          M_operation_level_d = data;
        end
        4'h3: begin
          M_expectedAns_d = data;
        end
        4'h4: begin
          M_moduloAns_d = data;
        end
        4'h5: begin
          M_score_d = data;
        end
        4'h6: begin
          M_countdown_timer_d = data;
        end
        4'h7: begin
          M_direction_d = data;
        end
        4'h8: begin
          M_ledvalue_d = data;
        end
        4'h9: begin
          M_score_timer_d = data;
        end
        4'ha: begin
          M_temp1_d = data;
        end
        4'hb: begin
          M_temp2_d = data;
        end
        4'hc: begin
          M_temp3_d = data;
        end
        4'hd: begin
          M_temp4_d = data;
        end
        4'he: begin
          M_temp5_d = data;
        end
        4'hf: begin
          M_temp6_d = data;
        end
      endcase
    end
    
    case (read_address_a)
      4'h0: begin
        out_a = M_operand1_q;
      end
      4'h1: begin
        out_a = M_operand2_q;
      end
      4'h2: begin
        out_a = M_operation_level_q;
      end
      4'h3: begin
        out_a = M_expectedAns_q;
      end
      4'h4: begin
        out_a = M_moduloAns_q;
      end
      4'h5: begin
        out_a = M_score_q;
      end
      4'h6: begin
        out_a = M_countdown_timer_q;
      end
      4'h7: begin
        out_a = M_direction_q;
      end
      4'h8: begin
        out_a = M_ledvalue_q;
      end
      4'h9: begin
        out_a = M_score_timer_q;
      end
      4'ha: begin
        out_a = M_temp1_q;
      end
      4'hb: begin
        out_a = M_temp2_q;
      end
      4'hc: begin
        out_a = M_temp3_q;
      end
      4'hd: begin
        out_a = M_temp4_q;
      end
      4'he: begin
        out_a = M_temp5_q;
      end
      4'hf: begin
        out_a = M_temp6_q;
      end
      default: begin
        out_a = 1'h0;
      end
    endcase
    
    case (read_address_b)
      4'h0: begin
        out_b = M_operand1_q;
      end
      4'h1: begin
        out_b = M_operand2_q;
      end
      4'h2: begin
        out_b = M_operation_level_q;
      end
      4'h3: begin
        out_b = M_expectedAns_q;
      end
      4'h4: begin
        out_b = M_moduloAns_q;
      end
      4'h5: begin
        out_b = M_score_q;
      end
      4'h6: begin
        out_b = M_countdown_timer_q;
      end
      4'h7: begin
        out_b = M_direction_q;
      end
      4'h8: begin
        out_b = M_ledvalue_q;
      end
      4'h9: begin
        out_b = M_score_timer_q;
      end
      4'ha: begin
        out_b = M_temp1_q;
      end
      4'hb: begin
        out_b = M_temp2_q;
      end
      4'hc: begin
        out_b = M_temp3_q;
      end
      4'hd: begin
        out_b = M_temp4_q;
      end
      4'he: begin
        out_b = M_temp5_q;
      end
      4'hf: begin
        out_b = M_temp6_q;
      end
      default: begin
        out_b = 1'h0;
      end
    endcase
    
    case (read_address_o)
      4'h0: begin
        out_o = M_operand1_q;
      end
      4'h1: begin
        out_o = M_operand2_q;
      end
      4'h2: begin
        out_o = M_operation_level_q;
      end
      4'h3: begin
        out_o = M_expectedAns_q;
      end
      4'h4: begin
        out_o = M_moduloAns_q;
      end
      4'h5: begin
        out_o = M_score_q;
      end
      4'h6: begin
        out_o = M_countdown_timer_q;
      end
      4'h7: begin
        out_o = M_direction_q;
      end
      4'h8: begin
        out_o = M_ledvalue_q;
      end
      4'h9: begin
        out_o = M_score_timer_q;
      end
      4'ha: begin
        out_o = M_temp1_q;
      end
      4'hb: begin
        out_o = M_temp2_q;
      end
      4'hc: begin
        out_o = M_temp3_q;
      end
      4'hd: begin
        out_o = M_temp4_q;
      end
      4'he: begin
        out_o = M_temp5_q;
      end
      4'hf: begin
        out_o = M_temp6_q;
      end
      default: begin
        out_o = 1'h0;
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_operand1_q <= 1'h0;
      M_operand2_q <= 1'h0;
      M_operation_level_q <= 1'h0;
      M_expectedAns_q <= 1'h0;
      M_moduloAns_q <= 1'h0;
      M_score_q <= 1'h0;
      M_countdown_timer_q <= 1'h0;
      M_direction_q <= 1'h0;
      M_ledvalue_q <= 1'h0;
      M_score_timer_q <= 1'h0;
      M_temp1_q <= 1'h0;
      M_temp2_q <= 1'h0;
      M_temp3_q <= 1'h0;
      M_temp4_q <= 1'h0;
      M_temp5_q <= 1'h0;
      M_temp6_q <= 1'h0;
    end else begin
      M_operand1_q <= M_operand1_d;
      M_operand2_q <= M_operand2_d;
      M_operation_level_q <= M_operation_level_d;
      M_expectedAns_q <= M_expectedAns_d;
      M_moduloAns_q <= M_moduloAns_d;
      M_score_q <= M_score_d;
      M_countdown_timer_q <= M_countdown_timer_d;
      M_direction_q <= M_direction_d;
      M_ledvalue_q <= M_ledvalue_d;
      M_score_timer_q <= M_score_timer_d;
      M_temp1_q <= M_temp1_d;
      M_temp2_q <= M_temp2_d;
      M_temp3_q <= M_temp3_d;
      M_temp4_q <= M_temp4_d;
      M_temp5_q <= M_temp5_d;
      M_temp6_q <= M_temp6_d;
    end
  end
  
endmodule
